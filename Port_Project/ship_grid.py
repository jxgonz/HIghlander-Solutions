# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ship_grid.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QTextEdit, QMenuBar, QMenu,QHBoxLayout, QVBoxLayout
from PyQt5.QtWidgets import QWidget, QMainWindow
from mainwindow import Ui_MainWindow



class Ui_Form(QWidget, object):
    def __init__(self, parent, *args, **kwargs):
        #default grid settings
        super(Ui_Form,self).__init__()
        self.parent = object
        self.setObjectName("Remove Containers")
        self.resize(803, 600)
        self.setAutoFillBackground(False)
        self.setupUi(self)

    def setupUi(self, Form):
        #Adding Widget functionality
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(110, 60, 590, 325))
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.tableWidget.setCornerButtonEnabled(True)
        self.tableWidget.setRowCount(8)
        self.tableWidget.setColumnCount(12)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(40)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(40)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setDefaultSectionSize(40)
        self.tableWidget.verticalHeader().setMinimumSectionSize(40)
        self.tableWidget.verticalHeader().setStretchLastSection(False)

        for row in range (8):
            for column in range (12):
                self.tableWidget.setItem(row,column,QtWidgets.QTableWidgetItem())
                self.tableWidget.item(row, column).setBackground(QtGui.QColor(100,100,150))

        self.containers_remove = []

        self.tableWidget.cellClicked.connect(self.cell_was_clicked)

        self.tableWidget.setStyleSheet("QTableWidget::item:selected{ background-color: %s }" % QtGui.QColor(255,0,0).name())

                #Adding Tool bar for back button 
        self.layout = QVBoxLayout()
        self.setLayout(self.layout)

        self.menuBar = QMenuBar()
        self.fileMenu = QMenu("Back")

        self.menuBar.addMenu(self.fileMenu)
        self.menuBar.addAction(self.fileMenu.menuAction())
        self.layout.setMenuBar(self.menuBar)

        self.fileMenu.aboutToShow.connect(self.show_main_window)
        

    def show_main_window(self):
        self.main_window = Ui_MainWindow()
        self.main_window.show()
        self.hide()
        #self.parent.show()

    def cell_was_clicked(self, row, column):
        # format row and column numbers to match manifest format
        int_row = row
        int_column = column
        row = 8-row
        row = f"0{row}"
        column = column+1
        if column < 10:
            column = f"0{column}"

        # If container has already been clicked, remove it from list if it is clicked again
        container = f"{row},{column}"
        if container in self.containers_remove:
            self.containers_remove.remove(container)
        # If container has not been clicked, add it to list
        else:    
            self.containers_remove.append(container)
        # Print all containers to be removed
        print(self.containers_remove)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = Ui_Form()
    Form.show()
    sys.exit(app.exec_())
